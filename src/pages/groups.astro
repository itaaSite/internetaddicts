---
import { marked } from "marked"

import { getCollection } from "astro:content"
import Layout from "../layout/Layout.astro"

const groups = await getCollection("groups")
const groupsCounter = (await getCollection("groups")).length

const dayOrder = {
	–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: 1,
	–í—Ç–æ—Ä–Ω–∏–∫: 2,
	–°—Ä–µ–¥–∞: 3,
	–ß–µ—Ç–≤–µ—Ä–≥: 4,
	–ü—è—Ç–Ω–∏—Ü–∞: 5,
	–°—É–±–±–æ—Ç–∞: 6,
	–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: 7,
	–°–ø–æ–Ω—Ç–∞–Ω–Ω–æ: 8,
}

const someDate = '2023-04-25'

function sortGroupsByDay(groups) {
	return groups
	.sort((a, b) => {
		const t1 = someDate + a.data.dateTime
		const t2 = someDate + b.data.dateTime
		return new Date(t2).getMilliseconds() - new Date(t1).getMilliseconds()
	})
	.sort((a, b) => {
		return dayOrder[a.data.when] - dayOrder[b.data.when]
	})
}


---

<Layout
	title={`–û–Ω–ª–∞–π–Ω —Å–æ–±—Ä–∞–Ω–∏—è –∏ –û—Ñ–ª–∞–π–Ω`}
	desc={`–í—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∑–∞–≤–∏—Å–∏–º—ã—Ö. –°–æ–±—Ä–∞–Ω–∏–π (${groupsCounter})`}
>
	<h3 class="text-2xl font-medium text-gray-700">
		‚≠ê –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: <b>{groupsCounter}</b>
	</h3>
	<h4 class="text-2xl text-gray-700 font-medium">
		üåê –û–Ω–ª–∞–π–Ω –≥—Ä—É–ø–ø—ã ({groups.filter(f => f.data.type === "–û–Ω–ª–∞–π–Ω").length})
	</h4>

	<div class="grid grid-cols-1 items-start md:grid-cols-2 lg:grid-cols-3 gap-5">
		{
			groups &&
				sortGroupsByDay(groups.filter(f => f.data.type === "–û–Ω–ª–∞–π–Ω")).map(group => (
					<div class="p-4 bg-white rounded-lg ring-1 ring-gray-100">
						<div class="flex flex-col gap-3">
							<div class="flex items-center justify-between gap-2 flex-wrap">
								<h4 class="font-bold text-lg">{group.data.title}</h4>

								<span class="bg-green-100 ring-1 ring-green-200 px-2 py-1 rounded-md">
									üåê {group.data.type}
								</span>
							</div>
						
							<time class="font-medium" datetime={group.data.dateTime}>
								‚åö<span class="underline underline-offset-4">{group.data.dateTime}</span>
							</time>
					
							<p>
								–ì—Ä—É–ø–ø–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç: <b>{group.data.when}</b>
							</p>
							<p set:html={marked(group.body)} />

							<a
								href={group.data.link}
								class="text-center py-1 px-2 rounded-md bg-blue-500 text-white hover:bg-blue-700"
							>
								–í–æ–π—Ç–∏ –≤ —á–∞—Ç
							</a>
						</div>
					</div>
				))
		}
	</div>
	<h4 class="text-2xl text-gray-700 font-medium">
		üå§ –ñ–∏–≤—ã–µ –≥—Ä—É–ø–ø—ã ({groups.filter(f => f.data.type === "–ñ–∏–≤–∞—è").length})
	</h4>
	<div class="grid grid-cols-1 items-start md:grid-cols-2 lg:grid-cols-3 gap-5">
		{
			groups &&
				sortGroupsByDay(groups.filter(f => f.data.type === "–ñ–∏–≤–∞—è")).map(group => (
					<div class="p-4 bg-white rounded-lg ring-1 ring-gray-100">
						<div class="flex flex-col gap-3">
							<div class="flex items-center justify-between gap-2 flex-wrap">
								<h4 class="font-bold text-lg">{group.data.title}</h4>

								<span class="bg-sky-100 ring-1 ring-sky-200 px-2 py-1 rounded-md">
									üå§ {group.data.type}
								</span>
							</div>
							<time class="font-medium" datetime={group.data.dateTime}>
								‚åö<span class="underline underline-offset-4">{group.data.dateTime}</span>
							</time>
							<p>
								–ì—Ä—É–ø–ø–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç: <b>{group.data.when}</b>
							</p>
							<p set:html={marked(group.body)} />

							<a
								href={group.data.link}
								class="text-center py-1 px-2 rounded-md bg-blue-500 text-white hover:bg-blue-700"
							>
								–í–æ–π—Ç–∏ –≤ —á–∞—Ç
							</a>
						</div>
					</div>
				))
		}
	</div>
</Layout>
