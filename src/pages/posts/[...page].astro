---
import Article from "@/components/Article.astro"
import Paginate from "@/components/Paginate.astro"
import Tags from "@/components/Tags.astro"
import Layout from "@/layout/Layout.astro"
import { Icon } from "astro-icon/components"
import { getCollection } from "astro:content"
const posts = await getCollection("posts")

export async function getStaticPaths({ paginate }) {
	const posts = await getCollection("posts")
	return paginate(posts, {
		pageSize: 9,
	})
}
const { page } = Astro.props
---

<Layout
	title={`Архив - страница: ${page.currentPage}`}
	desc="Архив АИЗ. Полезная информация, методы шагов, инструменты и прочее."
>
	<h1 class="text-3xl text-gray-700 font-semibold flex gap-2 items-center">
		<Icon name="mdi:file-search-outline" />
		<span>{`Архив - страница: ${page.currentPage}`}</span>
	</h1>

	<Tags />

	{
		page.currentPage === 1 && (
			<div class="md:grid-cols-3 gap-14 grid grid-cols-1">
				{posts &&
					posts
						.filter(post => post.data.favorite === true)
						.slice(0, 3)
						.map(post => <Article favorite slug={post.slug} data={post.data} />)}
			</div>
		)
	}

	<Paginate page={page} />

	<div class="grid md:grid-cols-3 grid-cols-1 gap-14">
		<!-- filter(post => post.data.favorite !== true) -->
		{
			page.data
				.filter(post => post.data.favorite !== true)
				.sort(
					(a, b) =>
						new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime(),
				)
				.map(post => <Article slug={post.slug} data={post.data} />)
		}
	</div>

	<Paginate page={page} />
</Layout>
